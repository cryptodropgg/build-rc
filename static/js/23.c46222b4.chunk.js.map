{"version":3,"sources":["components/leaderboarddrop/LeaderboardTable.js","components/leaderboarddrop/LeaderboardBNBPot.js","components/leaderboarddrop/LeaderboardCDROPPot.js","components/leaderboarddrop/LeaderboardClaimTable.js","pages/LeaderboardDropPage.js"],"names":["createLeaderboardData","rank","userAddress","totalWins","BASIC_TABLE","LeaderboardTable","_jsx","Scrollbar","children","TableContainer","sx","minWidth","mt","_jsxs","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","index","Link","href","concat","style","color","target","name","CountdownStyle","styled","display","justifyContent","SeparatorStyle","Typography","_ref","theme","_defineProperty","margin","spacing","breakpoints","up","potOptions","loop","autoplay","animationData","PotLottie","background","Date","prototype","addHours","h","this","setHours","getHours","startCountdown","finishCountdown","LeaderboardBNBPot","countdown","useCountdown","progressPCT","getTime","now","_Fragment","Stack","direction","width","variant","marginTop","hours","opacity","minutes","seconds","Box","LinearProgress","value","marginLeft","textAlign","Lottie","options","isClickToPauseDisabled","lineHeight","alignItems","alt","src","LeaderboardCDROPPot","position","type","data","zIndex","createDistributionData","distDate","amount","action","LeaderboardClaimTable","Button","Item","Paper","_objectSpread","typography","body2","padding","palette","text","primary","badgeOptions","BadgeLottie","rendererSettings","preserveAspectRatio","AnimateContainer","motion","div","_ref2","LeaderboardPotStyle","backgroundSize","flexDirection","bnbPotStyle","border","backgroundImage","JUICEPotStyle","LeaderboardDrop","_ref3","account","useEthers","balance","useTokenBalance","LOTO_STAKING_ADDRESS","_useState","useState","_useState2","_slicedToArray","setDropBalance","useEffect","utils","formatEther","toString","useTheme","desktop","useMediaQuery","belowDesktop","down","Page","title","overflow","left","top","Container","maxWidth","initial","animate","variants","varWrapEnter","varFadeInRight","Grid","container","marginBottom","item","xs","md","lg","xl","component","paragraph","role","fontWeight","marginInline","bottom","minHeight","objectFit"],"mappings":"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","file":"static/js/23.c46222b4.chunk.js","sourcesContent":["// material\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer, Link } from '@material-ui/core';\n// components\nimport Scrollbar from '../Scrollbar';\n\n// ----------------------------------------------------------------------\n\nfunction createLeaderboardData(rank, userAddress, totalWins) {\n  return { rank, userAddress, totalWins };\n}\n\nconst BASIC_TABLE = [\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10),\n  createLeaderboardData(1, 'ABCDEF1234566ABCDEFG123454', 10)\n];\n\n// ----------------------------------------------------------------------\n\nexport default function LeaderboardTable() {\n  return (\n    <Scrollbar>\n      <TableContainer sx={{ minWidth: 400, mt: 1 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">Rank</TableCell>\n\n              <TableCell align=\"left\">Address</TableCell>\n\n              <TableCell align=\"right\">Total Wins</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {BASIC_TABLE.map((row, index) => (\n              <TableRow key={row.name}>\n                <TableCell align=\"left\">{index + 1}</TableCell>\n\n                <TableCell align=\"left\">\n                  <Link\n                    href={`https://bscscan.com/block/${row.userAddress}`}\n                    style={{ color: 'white' }}\n                    target=\"_blank\"\n                  >\n                    {row.userAddress}\n                  </Link>\n                </TableCell>\n\n                <TableCell align=\"right\">{row.totalWins}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Scrollbar>\n  );\n}\n","import { useState, useEffect } from 'react';\n\n// material\nimport { Box, Container, Stack, Typography, styled, Paper, Grid, LinearProgress } from '@material-ui/core';\nimport { motion } from 'framer-motion';\nimport { useTheme } from '@material-ui/core/styles';\nimport Lottie from 'react-lottie';\n\nimport useCountdown from '../../hooks/useCountdown';\n\nimport PotLottie from '../../assets/leaderboarddrop/pot.json';\n\nconst CountdownStyle = styled('div')({\n  display: 'flex',\n  justifyContent: 'left'\n});\n\nconst SeparatorStyle = styled(Typography)(({ theme }) => ({\n  margin: theme.spacing(0, 1),\n  [theme.breakpoints.up('sm')]: {\n    margin: theme.spacing(0, 1.5)\n  }\n}));\n\nconst potOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: PotLottie,\n  background: 'transparent'\n};\n\nDate.prototype.addHours = function (h) {\n  this.setHours(this.getHours() + h);\n  return this;\n};\n\nconst startCountdown = new Date().addHours(-23);\nconst finishCountdown = new Date().addHours(2);\n\nexport default function LeaderboardBNBPot() {\n  const countdown = useCountdown(finishCountdown);\n\n  let progressPCT = 0;\n  // if (new Date().getTime() <= finishCountdown.getTime() && timeLock !== 0) {\n  if (new Date().getTime() <= finishCountdown.getTime()) {\n    progressPCT = ((Date.now() - startCountdown) / (finishCountdown - startCountdown)) * 100;\n  } else {\n    progressPCT = 0;\n  }\n\n  return (\n    <>\n      <Stack direction=\"row\">\n        <Stack direction=\"column\" style={{ width: '70%' }}>\n          <Typography variant=\"h3\">Leaderboard Drop Pot</Typography>\n          {/* <Typography paragraph>\n                        The Top 16 most wins in 24 hours will evenly win the Leaderboard Pot prize.\n                    </Typography> */}\n\n          <Typography variant=\"h5\" style={{ marginTop: '1rem' }}>\n            Next Drop:\n          </Typography>\n          <CountdownStyle>\n            <div>\n              <Typography variant=\"h6\">{countdown.hours}</Typography>\n              <Typography sx={{ color: 'white', opacity: '0.5', marginTop: '-0.2rem' }}>Hours</Typography>\n            </div>\n\n            <SeparatorStyle variant=\"h6\">:</SeparatorStyle>\n\n            <div>\n              <Typography variant=\"h6\">{countdown.minutes}</Typography>\n              <Typography sx={{ color: 'white', opacity: '0.5', marginTop: '-0.2rem' }}>Minutes</Typography>\n            </div>\n\n            <SeparatorStyle variant=\"h6\">:</SeparatorStyle>\n\n            <div>\n              <Typography variant=\"h6\">{countdown.seconds}</Typography>\n              <Typography sx={{ color: 'white', opacity: '0.5', marginTop: '-0.2rem' }}>Seconds</Typography>\n            </div>\n          </CountdownStyle>\n\n          <Box sx={{ width: '90%', marginTop: '0.5rem' }}>\n            <LinearProgress variant=\"determinate\" color=\"yellow\" value={progressPCT} />\n          </Box>\n        </Stack>\n\n        <Stack style={{ width: '30%', marginLeft: 'auto', textAlign: 'center' }} justifyContent=\"center\">\n          <Lottie options={potOptions} style={{ width: '100%', margin: '0' }} isClickToPauseDisabled />\n        </Stack>\n      </Stack>\n\n      <Stack style={{ textAlign: 'end' }}>\n        <Typography variant=\"h5\" style={{ lineHeight: '1', marginTop: '1.5rem' }}>\n          Total Drop\n        </Typography>\n\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"end\">\n          <Typography variant=\"h3\" style={{ color: '#ffc900' }}>\n            100.000.000.000 BNB\n          </Typography>\n          <img alt=\"\" src=\"/static/icons/ic_bnb.svg\" style={{ width: '1.5rem', marginLeft: '0.5rem' }} />\n        </Stack>\n      </Stack>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\n\n// material\nimport { Box, Container, Stack, Typography, styled, Paper, Grid, LinearProgress } from '@material-ui/core';\nimport { motion } from 'framer-motion';\nimport { useTheme } from '@material-ui/core/styles';\nimport Lottie from 'react-lottie';\n\nimport useCountdown from '../../hooks/useCountdown';\n\nimport PotLottie from '../../assets/leaderboarddrop/watersplash.json';\n\nconst CountdownStyle = styled('div')({\n  display: 'flex',\n  justifyContent: 'left'\n});\n\nconst SeparatorStyle = styled(Typography)(({ theme }) => ({\n  margin: theme.spacing(0, 1),\n  [theme.breakpoints.up('sm')]: {\n    margin: theme.spacing(0, 1.5)\n  }\n}));\n\nconst potOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: PotLottie,\n  background: 'transparent'\n};\n\nDate.prototype.addHours = function (h) {\n  this.setHours(this.getHours() + h);\n  return this;\n};\n\nconst startCountdown = new Date().addHours(-23);\nconst finishCountdown = new Date().addHours(2);\n\nexport default function LeaderboardCDROPPot() {\n  const countdown = useCountdown(finishCountdown);\n\n  let progressPCT = 0;\n  // if (new Date().getTime() <= finishCountdown.getTime() && timeLock !== 0) {\n  if (new Date().getTime() <= finishCountdown.getTime()) {\n    progressPCT = ((Date.now() - startCountdown) / (finishCountdown - startCountdown)) * 100;\n  } else {\n    progressPCT = 0;\n  }\n\n  return (\n    <>\n      <Stack direction=\"row\">\n        <Stack direction=\"column\" style={{ width: '70%' }}>\n          <Typography variant=\"h3\">JUICE Pot</Typography>\n          {/* <Typography paragraph>\n                        The Top 16 most wins in 24 hours will evenly win the Leaderboard Pot prize.\n                    </Typography> */}\n\n          <Typography variant=\"h5\" style={{ marginTop: '1rem' }}>\n            Next Drop:\n          </Typography>\n          <CountdownStyle>\n            <div>\n              <Typography variant=\"h6\">{countdown.hours}</Typography>\n              <Typography sx={{ color: 'white', opacity: '0.5', marginTop: '-0.2rem' }}>Hours</Typography>\n            </div>\n\n            <SeparatorStyle variant=\"h6\">:</SeparatorStyle>\n\n            <div>\n              <Typography variant=\"h6\">{countdown.minutes}</Typography>\n              <Typography sx={{ color: 'white', opacity: '0.5', marginTop: '-0.2rem' }}>Minutes</Typography>\n            </div>\n\n            <SeparatorStyle variant=\"h6\">:</SeparatorStyle>\n\n            <div>\n              <Typography variant=\"h6\">{countdown.seconds}</Typography>\n              <Typography sx={{ color: 'white', opacity: '0.5', marginTop: '-0.2rem' }}>Seconds</Typography>\n            </div>\n          </CountdownStyle>\n\n          <Box sx={{ width: '90%', marginTop: '0.5rem' }}>\n            <LinearProgress variant=\"determinate\" color=\"primary\" value={progressPCT} />\n          </Box>\n        </Stack>\n\n        <Stack\n          style={{ width: '30%', marginLeft: 'auto', textAlign: 'center', position: 'relative' }}\n          justifyContent=\"center\"\n        >\n          <object\n            type=\"image/svg+xml\"\n            data=\"/static/leaderboarddrop/JUICE-blinking.svg\"\n            style={{ width: '100%', zIndex: '2', position: 'absolute' }}\n          >\n            l\n          </object>\n          {/* <Lottie\n                        options={potOptions}\n                        style={{ width: '100%', margin: '0', zIndex: '3'}}\n                        className=\"watersplash-lottie\"\n                        isClickToPauseDisabled\n                    /> */}\n        </Stack>\n      </Stack>\n\n      <Stack style={{ textAlign: 'end' }}>\n        <Typography variant=\"h5\" style={{ lineHeight: '1', marginTop: '1.5rem' }}>\n          Total Drop\n        </Typography>\n\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"end\">\n          <Typography variant=\"h3\" style={{ color: '#35C4EF' }}>\n            100.000.000.000 JUICE\n          </Typography>\n          <img alt=\"\" src=\"/static/icons/ic_JUICE.svg\" style={{ width: '1.8rem', marginLeft: '0.5rem' }} />\n        </Stack>\n      </Stack>\n    </>\n  );\n}\n","// material\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  Link,\n  Button,\n  Stack\n} from '@material-ui/core';\n// components\nimport Scrollbar from '../Scrollbar';\n\n// ----------------------------------------------------------------------\n\nfunction createDistributionData(distDate, amount, action) {\n  return { distDate, amount, action };\n}\n\nconst BASIC_TABLE = [\n  createDistributionData('01/11/2021', 100, 'actionCommand'),\n  createDistributionData('01/11/2021', 100, 'actionCommand'),\n  createDistributionData('01/11/2021', 100, 'actionCommand'),\n  createDistributionData('01/11/2021', 100, 'actionCommand'),\n  createDistributionData('01/11/2021', 100, 'actionCommand')\n];\n\n// ----------------------------------------------------------------------\n\nexport default function LeaderboardClaimTable() {\n  return (\n    <Scrollbar>\n      <TableContainer sx={{ minWidth: 400, mt: 1 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">Date</TableCell>\n\n              <TableCell align=\"right\">Amount</TableCell>\n\n              <TableCell align=\"right\">Claim</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {BASIC_TABLE.map((row, index) => (\n              <TableRow key={row.name}>\n                <TableCell align=\"left\">{row.distDate}</TableCell>\n\n                <TableCell align=\"right\">\n                  <Stack direction=\"row\" justifyContent=\"right\">\n                    {row.amount} BNB\n                    <img src=\"/static/icons/ic_bnb.svg\" style={{ width: '1rem', marginLeft: '0.5rem' }} alt=\"\" />\n                  </Stack>\n                </TableCell>\n\n                <TableCell align=\"right\">\n                  <Button variant=\"outlined\" color=\"primary\">\n                    Claim\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Scrollbar>\n  );\n}\n","import { useState, useEffect } from 'react';\n\n// material\nimport { Box, Container, Stack, Typography, styled, Paper, Grid, LinearProgress } from '@material-ui/core';\n\nimport { motion } from 'framer-motion';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport { useEthers, useTokenBalance, useContractCalls, useBlockNumber, useEtherBalance } from '@usedapp/core';\nimport { utils } from 'ethers';\nimport Lottie from 'react-lottie';\n\nimport {\n  LOTO_STAKING_ADDRESS,\n  LOTO_STAKING_INTERFACE,\n  LOTO_BNB_STORAGE_ADDRESS,\n  LOTO_BNB_STORAGE_INTERFACE\n} from '../config';\n\n// hooks\nimport useSettings from '../hooks/useSettings';\nimport useCountdown from '../hooks/useCountdown';\n\n// components\nimport Page from '../components/Page';\nimport { varFadeIn, varFadeInUp, varWrapEnter, varFadeInRight } from '../components/animate';\nimport LeaderboardTable from '../components/leaderboarddrop/LeaderboardTable';\nimport LeaderboardBNBPot from '../components/leaderboarddrop/LeaderboardBNBPot';\nimport LeaderboardCDROPPot from '../components/leaderboarddrop/LeaderboardCDROPPot';\nimport LeaderboardClaimTable from '../components/leaderboarddrop/LeaderboardClaimTable';\n\nimport BadgeLottie from '../assets/leaderboarddrop/badge.json';\n\n// ----------------------------------------------------------------------\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  color: theme.palette.text.primary\n}));\n\nconst badgeOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: BadgeLottie,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice'\n  },\n  background: 'transparent'\n};\n\nconst AnimateContainer = styled(motion.div)(({ theme }) => ({}));\n\nconst LeaderboardPotStyle = {\n  backgroundSize: 'cover',\n  display: 'flex',\n  flexDirection: 'column'\n};\n\nconst bnbPotStyle = {\n  border: '0.25rem solid #ffc900',\n  backgroundImage: 'url(/static/leaderboarddrop/bnbpot-bg.jpg)'\n};\n\nconst JUICEPotStyle = {\n  border: '0.25rem solid #35C4EF',\n  backgroundImage: 'url(/static/leaderboarddrop/JUICEpot-bg.jpg)'\n};\n\nexport default function LeaderboardDrop() {\n  const { account } = useEthers();\n\n  const balance = useTokenBalance(LOTO_STAKING_ADDRESS, account);\n\n  const [dropBalance, setDropBalance] = useState('0');\n\n  useEffect(() => {\n    if (balance) {\n      setDropBalance(utils.formatEther(balance.toString()));\n    } else {\n      setDropBalance('0');\n    }\n  }, [account, balance]);\n\n  const theme = useTheme();\n  const bigdesktop = useMediaQuery(theme.breakpoints.up('xl'));\n  const desktop = useMediaQuery(theme.breakpoints.up('lg'));\n  const belowDesktop = useMediaQuery(theme.breakpoints.down('lg'));\n  const tablet = useMediaQuery(theme.breakpoints.up('md'));\n  const mobile = useMediaQuery(theme.breakpoints.up('sm'));\n  const smallMobile = useMediaQuery(theme.breakpoints.up('xs'));\n\n  return (\n    <Page title=\"Cryptodrop | Leaderboard Drop\" style={{ overflow: 'hidden', marginTop: '-2.5rem' }}>\n      <img\n        src=\"/static/leaderboarddrop/leaderboard-bg.jpg\"\n        alt=\"\"\n        style={{ position: 'fixed', left: '0', top: '0', zIndex: '-2', width: '100%', minWidth: '80rem' }}\n      />\n      <Container maxWidth=\"xl\">\n        <AnimateContainer initial=\"initial\" animate=\"animate\" variants={varWrapEnter}>\n          <motion.div variants={varFadeInRight}>\n            <Grid container spacing={2} direction=\"row\" justifyContent=\"flex-start\" style={{ marginBottom: '1rem' }}>\n              <Grid item xs={12} md={12} lg={7} xl={7}>\n                <Stack direction=\"row\" alignItems=\"center\">\n                  <Lottie\n                    options={badgeOptions}\n                    style={{ width: '25%', margin: '0', minWidth: '5rem', maxWidth: '12rem' }}\n                    isClickToPauseDisabled\n                  />\n\n                  <Stack direction=\"column\">\n                    <Typography\n                      variant=\"h3\"\n                      component=\"h1\"\n                      paragraph\n                      style={{ textAlign: 'start', lineHeight: '1', marginBottom: '1rem' }}\n                    >\n                      Leaderboard Drop{' '}\n                      <span role=\"img\" aria-label=\"drop-emoji\">\n                        💦\n                      </span>\n                    </Typography>\n                    <Typography paragraph>\n                      The Top <span style={{ color: '#ffc900', fontWeight: 'bold' }}>16 Most Wins in 24 hours</span>{' '}\n                      will evenly win the Leaderboard Pot prize.\n                    </Typography>\n                  </Stack>\n                </Stack>\n\n                <Item\n                  style={{\n                    ...LeaderboardPotStyle,\n                    ...bnbPotStyle,\n                    maxWidth: '40rem',\n                    marginLeft: 'auto',\n                    marginBottom: '1rem',\n                    display: belowDesktop ? 'block' : 'none',\n                    marginInline: 'auto'\n                  }}\n                >\n                  <LeaderboardBNBPot />\n                </Item>\n\n                <Item\n                  style={{\n                    ...LeaderboardPotStyle,\n                    ...JUICEPotStyle,\n                    maxWidth: '40rem',\n                    marginLeft: 'auto',\n                    display: belowDesktop ? 'block' : 'none',\n                    marginInline: 'auto',\n                    marginBottom: '2rem'\n                  }}\n                >\n                  <LeaderboardCDROPPot />\n                </Item>\n\n                <Item style={{ marginInline: 'auto', marginInline: 'auto', maxWidth: '55rem' }}>\n                  <LeaderboardTable />\n                </Item>\n              </Grid>\n\n              <Grid item xs={12} md={12} lg={5} xl={5}>\n                <Item\n                  style={{\n                    ...LeaderboardPotStyle,\n                    ...bnbPotStyle,\n                    maxWidth: '50rem',\n                    marginLeft: 'auto',\n                    marginBottom: '1rem',\n                    display: desktop ? 'block' : 'none'\n                  }}\n                >\n                  <LeaderboardBNBPot />\n                </Item>\n\n                <Item\n                  style={{\n                    ...LeaderboardPotStyle,\n                    ...JUICEPotStyle,\n                    maxWidth: '50rem',\n                    marginLeft: 'auto',\n                    display: desktop ? 'block' : 'none'\n                  }}\n                >\n                  <LeaderboardCDROPPot />\n                </Item>\n\n                <Item style={{ marginTop: '1.2rem', marginInline: 'auto', maxWidth: '45rem' }}>\n                  <Typography variant=\"h4\">Claim Drop</Typography>\n                  <LeaderboardClaimTable />\n                </Item>\n              </Grid>\n            </Grid>\n          </motion.div>\n\n          <img\n            src=\"/static/background/waves.svg\"\n            alt=\"\"\n            style={{\n              position: 'fixed',\n              bottom: '0',\n              left: '0',\n              zIndex: '-1',\n              opacity: '0.2',\n              width: '100%',\n              minHeight: '20rem',\n              objectFit: 'cover'\n            }}\n          />\n        </AnimateContainer>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}