{"version":3,"sources":["../node_modules/@material-ui/core/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/internal/svg-icons/KeyboardArrowRight.js","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/polyfills/symbols.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/instanceOf.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/parser.mjs","../../src/index.ts"],"names":["createSvgIcon","_jsx","d","_typeof","obj","Symbol","iterator","constructor","prototype","asyncIterator","SYMBOL_TO_STRING_TAG","toStringTag","getLocation","source","position","match","lineRegexp","line","column","exec","body","index","length","printLocation","location","printSourceLocation","start","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","concat","name","lines","split","locationLine","subLineIndex","Math","floor","subLineColumnNum","subLines","i","push","slice","printPrefixedLines","map","subLine","existingLines","filter","_ref","undefined","padLen","max","apply","_ref2","_ref3","str","prefix","join","len","Array","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","_defineProperty","key","value","defineProperty","configurable","writable","_defineProperties","target","props","descriptor","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","Map","fn","Function","toString","indexOf","TypeError","has","get","set","Wrapper","_construct","arguments","_getPrototypeOf","this","create","_setPrototypeOf","Parent","args","_isNativeReflectConstruct","Reflect","construct","a","instance","bind","sham","Proxy","Date","e","o","p","setPrototypeOf","__proto__","getPrototypeOf","GraphQLError","_Error","subClass","superClass","_inherits","Constructor","protoProps","staticProps","_super","Derived","hasNativeReflectConstruct","result","Super","NewTarget","_createSuper","message","nodes","positions","path","originalError","extensions","_nodeLocations","_nodeLocations2","_nodeLocations3","_this","_classCallCheck","undefinedIfEmpty","isArray","nodeLocations","_i2","_this$nodes","loc","locations","pos","originalExtensions","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","stack","Error","captureStackTrace","error","output","_i4","_error$nodes2","node","_i6","_error$locations2","printError","array","syntaxError","description","TokenKind","freeze","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","NAME","INT","FLOAT","STRING","BLOCK_STRING","COMMENT","devAssert","condition","Boolean","process","Source","inspect","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","FIELD","FRAGMENT_DEFINITION","FRAGMENT_SPREAD","INLINE_FRAGMENT","VARIABLE_DEFINITION","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","Lexer","startOfFileToken","Token","lastToken","token","lineStart","_proto","advance","lookahead","kind","_token$next","next","readToken","printCharCode","code","isNaN","JSON","stringify","String","fromCharCode","toUpperCase","lexer","prev","bodyLength","end","charCodeAt","_line","_col","readComment","readBlockString","readString","readNumber","readName","unexpectedCharacterMessage","col","firstCode","isFloat","readDigits","isNameStart","b","c","chunkStart","charCode","char2hex","invalidSequence","rawValue","dedentBlockStringValue","Parser","options","sourceObj","instanceOf","isSource","_lexer","_options","parseName","expectToken","Kind","parseDocument","DOCUMENT","definitions","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","OPERATION_DEFINITION","operation","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","type","parseTypeReference","defaultValue","expectOptionalToken","parseValueLiteral","VARIABLE","SELECTION_SET","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","ARGUMENT","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","_this$_options","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","BOOLEAN","NULL","block","LIST","values","any","_this2","fields","parseObjectField","OBJECT_FIELD","parseDirective","DIRECTIVE","LIST_TYPE","NON_NULL_TYPE","NAMED_TYPE","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","interfaces","parseImplementsInterfaces","parseFieldsDefinition","OBJECT_TYPE_DEFINITION","_this$_options2","allowLegacySDLImplementsInterfaces","types","delimitedMany","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","parseUnionMemberTypes","UNION_TYPE_DEFINITION","parseEnumValuesDefinition","ENUM_TYPE_DEFINITION","parseEnumValueDefinition","ENUM_VALUE_DEFINITION","parseInputFieldsDefinition","INPUT_OBJECT_TYPE_DEFINITION","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","repeatable","parseDirectiveLocations","DIRECTIVE_DEFINITION","parseDirectiveLocation","startToken","_this$_options4","noLocation","Location","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","delimiterKind","isPunctuatorTokenKind"],"mappings":"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","file":"static/js/0.80bc83ea.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\r\n * @ignore - internal component.\r\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\r\n * @ignore - internal component.\r\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nexport var SYMBOL_ITERATOR = typeof Symbol === 'function' && Symbol.iterator != null ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_ASYNC_ITERATOR = typeof Symbol === 'function' && Symbol.asyncIterator != null ? Symbol.asyncIterator : '@@asyncIterator'; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_TO_STRING_TAG = typeof Symbol === 'function' && Symbol.toStringTag != null ? Symbol.toStringTag : '@@toStringTag';\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _nodeLocations, _nodeLocations2, _nodeLocations3;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message);\n    _this.name = 'GraphQLError';\n    _this.originalError = originalError !== null && originalError !== void 0 ? originalError : undefined; // Compute list of blame nodes.\n\n    _this.nodes = undefinedIfEmpty(Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined);\n    var nodeLocations = [];\n\n    for (var _i2 = 0, _ref3 = (_this$nodes = _this.nodes) !== null && _this$nodes !== void 0 ? _this$nodes : []; _i2 < _ref3.length; _i2++) {\n      var _this$nodes;\n\n      var _ref4 = _ref3[_i2];\n      var loc = _ref4.loc;\n\n      if (loc != null) {\n        nodeLocations.push(loc);\n      }\n    }\n\n    nodeLocations = undefinedIfEmpty(nodeLocations); // Compute locations in the source for the given nodes/positions.\n\n    _this.source = source !== null && source !== void 0 ? source : (_nodeLocations = nodeLocations) === null || _nodeLocations === void 0 ? void 0 : _nodeLocations[0].source;\n    _this.positions = positions !== null && positions !== void 0 ? positions : (_nodeLocations2 = nodeLocations) === null || _nodeLocations2 === void 0 ? void 0 : _nodeLocations2.map(function (loc) {\n      return loc.start;\n    });\n    _this.locations = positions && source ? positions.map(function (pos) {\n      return getLocation(source, pos);\n    }) : (_nodeLocations3 = nodeLocations) === null || _nodeLocations3 === void 0 ? void 0 : _nodeLocations3.map(function (loc) {\n      return getLocation(loc.source, loc.start);\n    });\n    _this.path = path !== null && path !== void 0 ? path : undefined;\n    var originalExtensions = originalError === null || originalError === void 0 ? void 0 : originalError.extensions;\n\n    if (extensions == null && isObjectLike(originalExtensions)) {\n      _this.extensions = _objectSpread({}, originalExtensions);\n    } else {\n      _this.extensions = extensions !== null && extensions !== void 0 ? extensions : {};\n    } // By being enumerable, JSON.stringify will include bellow properties in the resulting output.\n    // This ensures that the simplest possible GraphQL service adheres to the spec.\n\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      message: {\n        enumerable: true\n      },\n      locations: {\n        enumerable: _this.locations != null\n      },\n      path: {\n        enumerable: _this.path != null\n      },\n      extensions: {\n        enumerable: _this.extensions != null && Object.keys(_this.extensions).length > 0\n      },\n      name: {\n        enumerable: false\n      },\n      nodes: {\n        enumerable: false\n      },\n      source: {\n        enumerable: false\n      },\n      positions: {\n        enumerable: false\n      },\n      originalError: {\n        enumerable: false\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError !== null && originalError !== void 0 && originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i4 = 0, _error$nodes2 = error.nodes; _i4 < _error$nodes2.length; _i4++) {\n      var node = _error$nodes2[_i4];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i6 = 0, _error$locations2 = error.locations; _i6 < _error$locations2.length; _i6++) {\n      var location = _error$locations2[_i6];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport inspect from \"./inspect.mjs\";\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n */\n\n// See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n// See: https://webpack.js.org/guides/production/\nexport default process.env.NODE_ENV === 'production' ? // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n// eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  return value instanceof constructor;\n} : // eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  if (value instanceof constructor) {\n    return true;\n  }\n\n  if (_typeof(value) === 'object' && value !== null) {\n    var _value$constructor;\n\n    var className = constructor.prototype[Symbol.toStringTag];\n    var valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n    Symbol.toStringTag in value ? value[Symbol.toStringTag] : (_value$constructor = value.constructor) === null || _value$constructor === void 0 ? void 0 : _value$constructor.name;\n\n    if (className === valueClassName) {\n      var stringifiedValue = inspect(value);\n      throw new Error(\"Cannot use \".concat(className, \" \\\"\").concat(stringifiedValue, \"\\\" from another module or realm.\\n\\nEnsure that there is only one instance of \\\"graphql\\\" in the node_modules\\ndirectory. If different versions of \\\"graphql\\\" are the dependencies of other\\nrelied on modules, use \\\"resolutions\\\" to ensure only one version is installed.\\n\\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\\n\\nDuplicate \\\"graphql\\\" modules cannot be used at the same time since different\\nversions may have different capabilities and behavior. The data from one\\nversion used in the function from another could produce confusing and\\nspurious results.\"));\n    }\n  }\n\n  return false;\n};\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    typeof body === 'string' || devAssert(0, \"Body must be a string. Received: \".concat(inspect(body), \".\"));\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = prev.end;\n\n  while (pos < bodyLength) {\n    var code = body.charCodeAt(pos);\n    var _line = lexer.line;\n\n    var _col = 1 + pos - lexer.lineStart; // SourceCharacter\n\n\n    switch (code) {\n      case 0xfeff: // <BOM>\n\n      case 9: //   \\t\n\n      case 32: //  <space>\n\n      case 44:\n        //  ,\n        ++pos;\n        continue;\n\n      case 10:\n        //  \\n\n        ++pos;\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 13:\n        //  \\r\n        if (body.charCodeAt(pos + 1) === 10) {\n          pos += 2;\n        } else {\n          ++pos;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 33:\n        //  !\n        return new Token(TokenKind.BANG, pos, pos + 1, _line, _col, prev);\n\n      case 35:\n        //  #\n        return readComment(source, pos, _line, _col, prev);\n\n      case 36:\n        //  $\n        return new Token(TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);\n\n      case 38:\n        //  &\n        return new Token(TokenKind.AMP, pos, pos + 1, _line, _col, prev);\n\n      case 40:\n        //  (\n        return new Token(TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);\n\n      case 41:\n        //  )\n        return new Token(TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);\n\n      case 46:\n        //  .\n        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n          return new Token(TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);\n        }\n\n        break;\n\n      case 58:\n        //  :\n        return new Token(TokenKind.COLON, pos, pos + 1, _line, _col, prev);\n\n      case 61:\n        //  =\n        return new Token(TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);\n\n      case 64:\n        //  @\n        return new Token(TokenKind.AT, pos, pos + 1, _line, _col, prev);\n\n      case 91:\n        //  [\n        return new Token(TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);\n\n      case 93:\n        //  ]\n        return new Token(TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);\n\n      case 123:\n        // {\n        return new Token(TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);\n\n      case 124:\n        // |\n        return new Token(TokenKind.PIPE, pos, pos + 1, _line, _col, prev);\n\n      case 125:\n        // }\n        return new Token(TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);\n\n      case 34:\n        //  \"\n        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n          return readBlockString(source, pos, _line, _col, prev, lexer);\n        }\n\n        return readString(source, pos, _line, _col, prev);\n\n      case 45: //  -\n\n      case 48: //  0\n\n      case 49: //  1\n\n      case 50: //  2\n\n      case 51: //  3\n\n      case 52: //  4\n\n      case 53: //  5\n\n      case 54: //  6\n\n      case 55: //  7\n\n      case 56: //  8\n\n      case 57:\n        //  9\n        return readNumber(source, pos, code, _line, _col, prev);\n\n      case 65: //  A\n\n      case 66: //  B\n\n      case 67: //  C\n\n      case 68: //  D\n\n      case 69: //  E\n\n      case 70: //  F\n\n      case 71: //  G\n\n      case 72: //  H\n\n      case 73: //  I\n\n      case 74: //  J\n\n      case 75: //  K\n\n      case 76: //  L\n\n      case 77: //  M\n\n      case 78: //  N\n\n      case 79: //  O\n\n      case 80: //  P\n\n      case 81: //  Q\n\n      case 82: //  R\n\n      case 83: //  S\n\n      case 84: //  T\n\n      case 85: //  U\n\n      case 86: //  V\n\n      case 87: //  W\n\n      case 88: //  X\n\n      case 89: //  Y\n\n      case 90: //  Z\n\n      case 95: //  _\n\n      case 97: //  a\n\n      case 98: //  b\n\n      case 99: //  c\n\n      case 100: // d\n\n      case 101: // e\n\n      case 102: // f\n\n      case 103: // g\n\n      case 104: // h\n\n      case 105: // i\n\n      case 106: // j\n\n      case 107: // k\n\n      case 108: // l\n\n      case 109: // m\n\n      case 110: // n\n\n      case 111: // o\n\n      case 112: // p\n\n      case 113: // q\n\n      case 114: // r\n\n      case 115: // s\n\n      case 116: // t\n\n      case 117: // u\n\n      case 118: // v\n\n      case 119: // w\n\n      case 120: // x\n\n      case 121: // y\n\n      case 122:\n        // z\n        return readName(source, pos, _line, _col, prev);\n    }\n\n    throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n  }\n\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n  return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Location } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Source, isSource } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport var Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var _this$_options2;\n\n    if (!this.expectOptionalKeyword('implements')) {\n      return [];\n    }\n\n    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true) {\n      var types = []; // Optional leading ampersand\n\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || this.peek(TokenKind.NAME));\n\n      return types;\n    }\n\n    return this.delimitedMany(TokenKind.AMP, this.parseNamedType);\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS) ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType) : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n  ;\n\n  _proto.delimitedMany = function delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n","import { __assign } from \"tslib\";\nimport { parse } from 'graphql';\nvar docCache = new Map();\nvar fragmentSourceMap = new Map();\nvar printFragmentWarnings = true;\nvar experimentalFragmentVariables = false;\nfunction normalize(string) {\n    return string.replace(/[\\s,]+/g, ' ').trim();\n}\nfunction cacheKeyFromLoc(loc) {\n    return normalize(loc.source.body.substring(loc.start, loc.end));\n}\nfunction processFragments(ast) {\n    var seenKeys = new Set();\n    var definitions = [];\n    ast.definitions.forEach(function (fragmentDefinition) {\n        if (fragmentDefinition.kind === 'FragmentDefinition') {\n            var fragmentName = fragmentDefinition.name.value;\n            var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n            var sourceKeySet = fragmentSourceMap.get(fragmentName);\n            if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n                if (printFragmentWarnings) {\n                    console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n                        + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n                        + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n                }\n            }\n            else if (!sourceKeySet) {\n                fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n            }\n            sourceKeySet.add(sourceKey);\n            if (!seenKeys.has(sourceKey)) {\n                seenKeys.add(sourceKey);\n                definitions.push(fragmentDefinition);\n            }\n        }\n        else {\n            definitions.push(fragmentDefinition);\n        }\n    });\n    return __assign(__assign({}, ast), { definitions: definitions });\n}\nfunction stripLoc(doc) {\n    var workSet = new Set(doc.definitions);\n    workSet.forEach(function (node) {\n        if (node.loc)\n            delete node.loc;\n        Object.keys(node).forEach(function (key) {\n            var value = node[key];\n            if (value && typeof value === 'object') {\n                workSet.add(value);\n            }\n        });\n    });\n    var loc = doc.loc;\n    if (loc) {\n        delete loc.startToken;\n        delete loc.endToken;\n    }\n    return doc;\n}\nfunction parseDocument(source) {\n    var cacheKey = normalize(source);\n    if (!docCache.has(cacheKey)) {\n        var parsed = parse(source, {\n            experimentalFragmentVariables: experimentalFragmentVariables,\n            allowLegacyFragmentVariables: experimentalFragmentVariables\n        });\n        if (!parsed || parsed.kind !== 'Document') {\n            throw new Error('Not a valid GraphQL document.');\n        }\n        docCache.set(cacheKey, stripLoc(processFragments(parsed)));\n    }\n    return docCache.get(cacheKey);\n}\nexport function gql(literals) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (typeof literals === 'string') {\n        literals = [literals];\n    }\n    var result = literals[0];\n    args.forEach(function (arg, i) {\n        if (arg && arg.kind === 'Document') {\n            result += arg.loc.source.body;\n        }\n        else {\n            result += arg;\n        }\n        result += literals[i + 1];\n    });\n    return parseDocument(result);\n}\nexport function resetCaches() {\n    docCache.clear();\n    fragmentSourceMap.clear();\n}\nexport function disableFragmentWarnings() {\n    printFragmentWarnings = false;\n}\nexport function enableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = true;\n}\nexport function disableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = false;\n}\nvar extras = {\n    gql: gql,\n    resetCaches: resetCaches,\n    disableFragmentWarnings: disableFragmentWarnings,\n    enableExperimentalFragmentVariables: enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables: disableExperimentalFragmentVariables\n};\n(function (gql_1) {\n    gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;\n})(gql || (gql = {}));\ngql[\"default\"] = gql;\nexport default gql;\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}