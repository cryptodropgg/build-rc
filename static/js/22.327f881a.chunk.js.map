{"version":3,"sources":["utils/encodeParams.js","queries/index.js","../node_modules/@material-ui/icons/CheckCircle.js","../node_modules/@material-ui/icons/Error.js","hooks/useWallets.js","../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js","components/MyBets.js","pages/MyBetsPage.js"],"names":["createBetId","replace","c","r","Math","random","toString","encodeCombination","combination","map","value","padStart","join","placeSymbols","A","B","C","D","E","F","symbolPlaces","getSymbolPlaces","i","hexToBytes","hex","bytes","length","push","parseInt","substr","hexToLastBytes","GET_ROUNDS_HASH_LOTTERY","gql","_templateObject","_taggedTemplateLiteral","GET_PREVIOUS_BETS","_templateObject2","GET_PREVIOUS_BETS_TWOWIN","_templateObject3","_templateObject4","GET_PREVIOUS_BETS_LUCKY888","_templateObject5","GET_PREVIOUS_BETS_APESLOTS","_templateObject6","GET_PREVIOUS_BETS_SHELLGAME","_templateObject7","GET_PREVIOUS_BETS_ENVELOPES","_templateObject8","GET_USER_BETS","_templateObject9","GET_USER_TICKETS_HASH_LOTTERY","_templateObject10","GET_PAST_JACKPOTS","_templateObject11","GET_PAST_JACKPOTS_LUCKY888","_templateObject12","_templateObject13","GET_PAST_JACKPOTS_APESLOTS","_templateObject14","GET_PAST_JACKPOTS_SHELLGAME","_templateObject15","GET_PAST_JACKPOTS_ENVELOPES","_templateObject16","GET_PAST_JACKPOTS_TWOWIN","_templateObject17","GET_PREVIOUS_BETS_PLINKO","_templateObject18","GET_PAST_JACKPOTS_PLINKO","_templateObject19","GET_TOTAL_DROPS","_templateObject20","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","useWallets","useContext","WalletContext","getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","_excluded","CardHeaderRoot","styled","name","overridesResolver","props","styles","_extends2","_extends","_defineProperty","concat","title","subheader","root","display","alignItems","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","CardHeader","React","inProps","ref","useThemeProps","className","_props$component","component","_props$disableTypogra","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","type","Typography","_jsx","variant","children","color","_jsxs","clsx","as","formatHashData","hash","bet","bytes1","symbols1","row","bytes2","symbols2","hashData","betData","j","symbol1","symbol","match","symbol2","formatHashDataApeSlots","formatHashDataShell","shell","shellA","shellB","shellC","shellD","includes","shellType","text","envelopeType","envelope","formatPlinkoData","MYBETSCOLUMNS","id","label","minWidth","align","GroupingFixedHeader","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","rowsPerPage","setRowsPerPage","_useState5","_useState6","bets","setBets","account","useEthers","_useState7","undefined","_useState8","user","setUser","useBlockNumber","useEffect","toLowerCase","_useState9","_useState10","total","setTotal","data","useQuery","variables","perPage","skip","pollInterval","betsData","betid","betID","betstatus","win","betamount","amount","winamount","reward","block","txid","tx","token","users","totalBets","_Fragment","Scrollbar","TableContainer","sx","Table","stickyHeader","TableHead","TableRow","column","TableCell","style","top","background","fontSize","TableBody","hover","role","tabIndex","fontWeight","Tooltip","arrow","placement","CheckCircleIcon","verticalAlign","Link","href","target","ErrorIcon","mode","LOTO_ADDRESS_LUCKY888","LOTO_ADDRESS_SHELLGAME","LOTO_ADDRESS_ENVELOPES","LOTO_ADDRESS_TWOWIN","LOTO_ADDRESS_APESLOTS","PLINKO_ADDRESS","PLINKO_SHAZU_ADDRESS","LOTO_ADDRESS","Stack","direction","spacing","justifyContent","fMCurrency","alt","src","width","height","winner","TablePagination","count","Number","onPageChange","event","newPage","rowsPerPageOptions","onRowsPerPageChange","AnimateContainer","Paper","_ref","theme","_objectSpread","typography","body2","palette","primary","_ref2","margin","breakpoints","up","motion","div","_ref4","MyBetsPage","useTheme","themeStretch","useSettings","_useWallets","connectedStatus","walletAddress","walletType","JUICEBalance","onChangeConnect","Page","overflow","Container","maxWidth","initial","animate","variants","varWrapEnter","varFadeIn","position","opacity","marginLeft","zIndex","varFadeInRight","paragraph","Grid","container","item","xs","md","lg","xl","Card","MyBets","bottom","left","minHeight","objectFit"],"mappings":"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","file":"static/js/22.327f881a.chunk.js","sourcesContent":["/* eslint-disable */\n\nexport function createBetId() {\n  return (\n    '0x' +\n    'xxxxxxxxxxyxxxxxxxxxxxxyxxxxxxxx'.replace(/[xy]/g, function (c) {\n      let r = (Math.random() * 16) | 0,\n        v = c == 'x' ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    })\n  );\n}\n\nexport function encodeCombination(combination) {\n  return combination.map((value) => value.toString(16).padStart(2, '0')).join('');\n}\n\nexport const placeSymbols = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  A: 10,\n  B: 11,\n  C: 12,\n  D: 13,\n  E: 14,\n  F: 15\n};\n\nexport const symbolPlaces = {\n  0: '0',\n  1: '1',\n  2: '2',\n  3: '3',\n  4: '4',\n  5: '5',\n  6: '6',\n  7: '7',\n  8: '8',\n  9: '9',\n  10: 'A',\n  11: 'B',\n  12: 'C',\n  13: 'D',\n  14: 'E',\n  15: 'F'\n};\n\nexport function getSymbolPlaces(i) {\n  return symbolPlaces[i];\n}\n\nexport function hexToBytes(hex) {\n  for (var bytes = [], c = 2; c < hex.length; c += 2) bytes.push(parseInt(hex.substr(c, 2), 16));\n  return bytes;\n}\n\nexport function hexToLastBytes(hex) {\n  for (var bytes = [], c = 10; c < hex.length; c += 2) bytes.push(parseInt(hex.substr(c, 2), 16));\n  return bytes;\n}\n","import { gql } from '@apollo/client';\n\nexport const GET_ROUNDS_HASH_LOTTERY = gql`\n  query GetRounds($perPage: Int!, $skip: Int!) {\n    rounds(first: $perPage, skip: $skip, orderBy: roundID, orderDirection: desc) {\n      id\n      block\n      hash\n      hashMap\n      drawnBy\n      rewards\n      numberOfWinners\n      totalBets\n      roundID\n      tx\n    }\n\n    summaries {\n      totalRounds\n    }\n  }\n`;\n\nexport const GET_PREVIOUS_BETS = gql`\n  query GetBets($perPage: Int!, $skip: Int!) {\n    bets(first: $perPage, skip: $skip, orderBy: block, orderDirection: desc, where: { type: \"Block Hash Game\" }) {\n      id\n      betID\n      user {\n        id\n      }\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n    }\n\n    summaries {\n      totalBets\n    }\n  }\n`;\n\nexport const GET_PREVIOUS_BETS_VIP = gql`\n  query GetBets($perPage: Int!, $skip: Int!) {\n    bets(first: $perPage, skip: $skip, orderBy: block, orderDirection: desc, where: { isVip: true }) {\n      id\n      betID\n      user {\n        id\n      }\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n    }\n\n    summaries {\n      totalBetsVIP\n    }\n  }\n`;\n\nexport const GET_PREVIOUS_BETS_TWOWIN = gql`\n  query GetBets($perPage: Int!, $skip: Int!) {\n    bets(first: $perPage, skip: $skip, orderBy: block, orderDirection: desc, where: { type: \"Two Win Game\" }) {\n      id\n      betID\n      user {\n        id\n      }\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n    }\n\n    summaries {\n      totalBetsTwoWin\n    }\n  }\n`;\n\nexport const GET_PREVIOUS_BETS_LUCKY888 = gql`\n  query GetBets($perPage: Int!, $skip: Int!) {\n    bets(first: $perPage, skip: $skip, orderBy: block, orderDirection: desc, where: { type: \"Lucky 888\" }) {\n      id\n      betID\n      user {\n        id\n      }\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n    }\n\n    summaries {\n      totalBetsLucky888\n    }\n  }\n`;\n\nexport const GET_PREVIOUS_BETS_APESLOTS = gql`\n  query GetBets($perPage: Int!, $skip: Int!) {\n    bets(first: $perPage, skip: $skip, orderBy: block, orderDirection: desc, where: { type: \"Ape Slots\" }) {\n      id\n      betID\n      user {\n        id\n      }\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n      mode\n    }\n\n    summaries {\n      totalBetsApeSlots\n    }\n  }\n`;\n\nexport const GET_PREVIOUS_BETS_SHELLGAME = gql`\n  query GetBets($perPage: Int!, $skip: Int!) {\n    bets(first: $perPage, skip: $skip, orderBy: block, orderDirection: desc, where: { type: \"Shell Game\" }) {\n      id\n      betID\n      user {\n        id\n      }\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n      shell\n    }\n\n    summaries {\n      totalBetsShellGame\n    }\n  }\n`;\n\nexport const GET_PREVIOUS_BETS_ENVELOPES = gql`\n  query GetBets($perPage: Int!, $skip: Int!) {\n    bets(first: $perPage, skip: $skip, orderBy: block, orderDirection: desc, where: { type: \"Envelopes\" }) {\n      id\n      betID\n      user {\n        id\n      }\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n      envelope\n    }\n\n    summaries {\n      totalBetsEnvelopes\n    }\n  }\n`;\n\nexport const GET_USER_BETS = gql`\n  query GetUserBets($perPage: Int!, $skip: Int!, $account: String!) {\n    bets(first: $perPage, skip: $skip, orderBy: block, orderDirection: desc, where: { user: $account }) {\n      id\n      betID\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n      type\n      shell\n      envelope\n      mode\n      slot\n      token\n    }\n\n    users(where: { id: $account }) {\n      totalBets\n    }\n  }\n`;\n\nexport const GET_USER_TICKETS_HASH_LOTTERY = gql`\n  query GetUserBets($perPage: Int!, $skip: Int!, $account: String!) {\n    tickets(first: $perPage, skip: $skip, orderBy: block, orderDirection: desc, where: { user: $account }) {\n      id\n      block\n      betID\n      user {\n        id\n        totalTickets\n      }\n\n      round {\n        id\n        hash\n        hashMap\n        rewards\n        numberOfWinners\n        totalBets\n        roundSettled\n      }\n\n      hash\n      hashMap\n      amount\n      tx\n    }\n\n    users(where: { id: $account }) {\n      totalTickets\n    }\n  }\n`;\n\nexport const GET_PAST_JACKPOTS = gql`\n  query GetBets($perPage: Int!, $skip: Int!, $status: Boolean!) {\n    bets(\n      first: $perPage\n      skip: $skip\n      orderBy: block\n      orderDirection: desc\n      where: { win: $status, type: \"Block Hash Game\" }\n    ) {\n      id\n      betID\n      user {\n        id\n      }\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n    }\n\n    summaries {\n      totalJackpots\n    }\n  }\n`;\n\nexport const GET_PAST_JACKPOTS_VIP = gql`\n  query GetBets($perPage: Int!, $skip: Int!, $status: Boolean!) {\n    bets(first: $perPage, skip: $skip, orderBy: block, orderDirection: desc, where: { win: $status, isVip: true }) {\n      id\n      betID\n      user {\n        id\n      }\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n    }\n\n    summaries {\n      totalJackpotsVIP\n    }\n  }\n`;\n\nexport const GET_PAST_JACKPOTS_LUCKY888 = gql`\n  query GetBets($perPage: Int!, $skip: Int!, $status: Boolean!) {\n    bets(\n      first: $perPage\n      skip: $skip\n      orderBy: block\n      orderDirection: desc\n      where: { win: $status, type: \"Lucky 888\" }\n    ) {\n      id\n      betID\n      user {\n        id\n      }\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n    }\n\n    summaries {\n      totalJackpotsLucky888\n    }\n  }\n`;\n\nexport const GET_PAST_JACKPOTS_APESLOTS = gql`\n  query GetBets($perPage: Int!, $skip: Int!, $status: Boolean!) {\n    bets(\n      first: $perPage\n      skip: $skip\n      orderBy: block\n      orderDirection: desc\n      where: { win: $status, type: \"Ape Slots\" }\n    ) {\n      id\n      betID\n      user {\n        id\n      }\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n    }\n\n    summaries {\n      totalJackpotsApeSlots\n    }\n  }\n`;\n\nexport const GET_PAST_JACKPOTS_SHELLGAME = gql`\n  query GetBets($perPage: Int!, $skip: Int!, $status: Boolean!) {\n    bets(\n      first: $perPage\n      skip: $skip\n      orderBy: block\n      orderDirection: desc\n      where: { win: $status, type: \"Shell Game\" }\n    ) {\n      id\n      betID\n      user {\n        id\n      }\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n      shell\n    }\n\n    summaries {\n      totalJackpotsShellGame\n    }\n  }\n`;\n\nexport const GET_PAST_JACKPOTS_ENVELOPES = gql`\n  query GetBets($perPage: Int!, $skip: Int!, $status: Boolean!) {\n    bets(\n      first: $perPage\n      skip: $skip\n      orderBy: block\n      orderDirection: desc\n      where: { win: $status, type: \"Envelopes\" }\n    ) {\n      id\n      betID\n      user {\n        id\n      }\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n      envelope\n    }\n\n    summaries {\n      totalJackpotsEnvelopes\n    }\n  }\n`;\n\nexport const GET_PAST_JACKPOTS_TWOWIN = gql`\n  query GetBets($perPage: Int!, $skip: Int!, $status: Boolean!) {\n    bets(\n      first: $perPage\n      skip: $skip\n      orderBy: block\n      orderDirection: desc\n      where: { win: $status, type: \"Two Win Game\" }\n    ) {\n      id\n      betID\n      user {\n        id\n      }\n      amount\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n    }\n\n    summaries {\n      totalJackpotsTwoWin\n    }\n  }\n`;\n\n\nexport const GET_PREVIOUS_BETS_PLINKO = gql`\n  query GetBets($perPage: Int!, $skip: Int!) {\n    bets(first: $perPage, skip: $skip, orderBy: block, orderDirection: desc, where: { type: \"Plinko\" }) {\n      id\n      betID\n      user {\n        id\n      }\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n      slot\n      token\n    }\n\n    summaries {\n      totalBetsPlinko\n    }\n  }\n`;\n\n\nexport const GET_PAST_JACKPOTS_PLINKO = gql`\n  query GetBets($perPage: Int!, $skip: Int!, $status: Boolean!) {\n    bets(\n      first: $perPage\n      skip: $skip\n      orderBy: block\n      orderDirection: desc\n      where: { win: $status, type: \"Plinko\" }\n    ) {\n      id\n      betID\n      user {\n        id\n      }\n      reward\n      bet\n      hash\n      win\n      block\n      tx\n      slot\n      token\n    }\n\n    summaries {\n      totalJackpotsPlinko\n    }\n  }\n`;\n\nexport const GET_TOTAL_DROPS = gql`\n  query GetDrops {\n    drops(first: 1) {\n      totalDrops\n      totalJuiceDrops\n      totalShazuDrops\n    }\n  }\n`;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n}), 'Error');\n\nexports.default = _default;","import { useContext } from 'react';\nimport { WalletContext } from '../contexts/WalletContext';\n\n// ----------------------------------------------------------------------\n\nconst useWallets = () => useContext(WalletContext);\n\nexport default useWallets;\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { useEffect, useState } from 'react';\nimport { useBlockNumber, useEthers } from '@usedapp/core';\n// material\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  Tooltip,\n  TablePagination,\n  Link,\n  Typography,\n  Stack,\n  Chip\n} from '@material-ui/core';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { useQuery } from '@apollo/client';\nimport { GET_USER_BETS } from '../queries';\nimport {\n  LOTO_ADDRESS_LUCKY888,\n  LOTO_ADDRESS,\n  LOTO_ADDRESS_TWOWIN,\n  LOTO_ADDRESS_SHELLGAME,\n  LOTO_ADDRESS_ENVELOPES,\n  LOTO_ADDRESS_APESLOTS,\n  PLINKO_ADDRESS,\n  PLINKO_SHAZU_ADDRESS\n} from '../config';\nimport { hexToBytes, getSymbolPlaces } from '../utils/encodeParams';\n// components\nimport Scrollbar from './Scrollbar';\n\nimport { fCRCurrency, fMCurrency } from '../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nfunction formatHashData(hash, bet, type) {\n  const bytes1 = hexToBytes(hash);\n  const symbols1 = bytes1.map((row) => getSymbolPlaces(row));\n\n  const bytes2 = hexToBytes(bet);\n  const symbols2 = bytes2.map((row) => getSymbolPlaces(row));\n\n  const hashData = [];\n  const betData = [];\n\n  let j = 0;\n\n  if (type === 'Two Win Game') {\n    j = 4;\n  }\n\n  for (let i = j; i < 6; i += 1) {\n    const symbol1 = {\n      symbol: '',\n      match: false\n    };\n\n    const symbol2 = {\n      symbol: '',\n      match: false\n    };\n\n    symbol1.symbol = symbols1[i];\n    symbol2.symbol = symbols2[i];\n\n    if (bytes1[i] === bytes2[i]) {\n      symbol1.match = true;\n      symbol2.match = true;\n    }\n\n    hashData.push(symbol1);\n    betData.push(symbol2);\n  }\n\n  return { hashData, betData };\n}\n\nfunction formatHashDataApeSlots(hash) {\n  const bytes1 = hexToBytes(hash);\n  const symbols1 = bytes1.map((row) => getSymbolPlaces(row));\n\n  const hashData = [];\n\n  for (let i = 0; i < 6; i += 1) {\n    const symbol1 = {\n      symbol: '',\n      match: false\n    };\n\n    symbol1.symbol = symbols1[i];\n\n    if (\n      (i === 5 && symbol1.symbol === 'A') ||\n      (i === 5 && symbol1.symbol === 'B') ||\n      (i === 5 && symbol1.symbol === 'C') ||\n      (i === 5 && symbol1.symbol === 'D') ||\n      (i === 5 && symbol1.symbol === 'E')\n    ) {\n      symbol1.match = true;\n    }\n\n    hashData.push(symbol1);\n  }\n\n  return { hashData };\n}\n\nfunction formatHashDataShell(hash, shell) {\n  const shellA = ['0', '1', '2', '3'];\n  const shellB = ['4', '5', '6', '7'];\n  const shellC = ['8', '9', 'A', 'B'];\n  const shellD = ['C', 'D', 'E', 'F'];\n\n  const bytes1 = hexToBytes(hash);\n  const symbols1 = bytes1.map((row) => getSymbolPlaces(row));\n\n  const hashData = [];\n\n  for (let i = 0; i < 6; i += 1) {\n    const symbol1 = {\n      symbol: '',\n      match: false\n    };\n\n    symbol1.symbol = symbols1[i];\n\n    if (i === 5) {\n      if (shell === 0 && shellA.includes(symbols1[i])) {\n        symbol1.match = true;\n      }\n\n      if (shell === 1 && shellB.includes(symbols1[i])) {\n        symbol1.match = true;\n      }\n\n      if (shell === 2 && shellC.includes(symbols1[i])) {\n        symbol1.match = true;\n      }\n\n      if (shell === 3 && shellD.includes(symbols1[i])) {\n        symbol1.match = true;\n      }\n    }\n\n    hashData.push(symbol1);\n  }\n\n  return { hashData };\n}\n\nfunction shellType(shell) {\n  let text = '';\n\n  if (shell === 0) {\n    text = 'Shell A';\n  }\n\n  if (shell === 1) {\n    text = 'Shell B';\n  }\n\n  if (shell === 2) {\n    text = 'Shell C';\n  }\n\n  if (shell === 3) {\n    text = 'Shell D';\n  }\n\n  return text;\n}\n\nfunction envelopeType(envelope) {\n  let text = '';\n\n  if (envelope === 0) {\n    text = 'Envelope A';\n  }\n\n  if (envelope === 1) {\n    text = 'Envelope B';\n  }\n\n  if (envelope === 2) {\n    text = 'Envelope C';\n  }\n\n  if (envelope === 3) {\n    text = 'Envelope D';\n  }\n\n  return text;\n}\n\nfunction formatPlinkoData(hash) {\n\n  const bytes1 = hexToBytes(hash);\n  const symbols1 = bytes1.map((row) => getSymbolPlaces(row));\n\n  const hashData = [];\n\n  for (let i = 0; i < 6; i += 1) {\n    const symbol1 = {\n      symbol: '',\n      match: false\n    };\n\n    symbol1.symbol = symbols1[i];\n\n    if (i === 5) {\n      symbol1.match = true;\n    }\n\n    hashData.push(symbol1);\n  }\n\n  return { hashData };\n}\n\nconst MYBETSCOLUMNS = [\n  { id: 'block', label: 'Block', minWidth: 50 },\n  { id: 'betid', label: 'Bet ID', minWidth: 50 },\n  { id: 'hash', label: 'Hash', minWidth: 50 },\n  { id: 'bet', label: 'Bet', minWidth: 50 },\n  { id: 'type', label: 'Game', minWidth: 50 },\n  { id: 'betamount', label: 'Bet Amount', minWidth: 50, align: 'right' },\n  { id: 'winamount', label: 'Win Amount', minWidth: 50, align: 'right' }\n];\n\n// ----------------------------------------------------------------------\n\nexport default function GroupingFixedHeader() {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const [bets, setBets] = useState([]);\n  const { account } = useEthers();\n  const [user, setUser] = useState(undefined);\n  const blockNumber = useBlockNumber();\n\n  useEffect(() => {\n    if (account) {\n      setUser(account.toLowerCase());\n    } else {\n      setUser(undefined);\n    }\n  }, [account]);\n\n  const [total, setTotal] = useState(0);\n  const { data } = useQuery(GET_USER_BETS, {\n    variables: {\n      perPage: rowsPerPage,\n      skip: page * rowsPerPage,\n      account: user\n    },\n    pollInterval: 3000\n  });\n\n  useEffect(() => {\n    if (data && user) {\n      const betsData = data.bets.map((row) => ({\n        betid: row.betID,\n        type: row.type,\n        betstatus: row.win,\n        hash:\n          row.type === 'Shell Game' || row.type === 'Envelopes'\n            ? formatHashDataShell(row.hash, row.shell)\n            : row.type === 'Ape Slots'\n            ? formatHashDataApeSlots(row.hash)\n            :  row.type === 'Plinko' ?\n            formatPlinkoData(row.hash) :\n            formatHashData(row.hash, row.bet, row.type),\n        betamount: row.amount,\n        winamount: row.reward,\n        block: row.block,\n        txid: row.tx,\n        shell: row.shell,\n        envelope: row.envelope,\n        slot: row.slot,\n        token: row.token\n      }));\n\n      setBets(betsData);\n\n      if (data.users.length > 0) {\n        setTotal(data.users[0].totalBets);\n      }\n    }\n  }, [data, account]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <>\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: '65rem' }}>\n          <Table stickyHeader>\n            <TableHead>\n              <TableRow>\n                {MYBETSCOLUMNS.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ top: 0, minWidth: column.minWidth }}\n                    sx={{ background: '#242538', fontSize: '1rem' }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n\n            <TableBody style={{ top: 40 }}>\n              {bets.map((row) => (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.block + row.winner}>\n                  {MYBETSCOLUMNS.map((column) => {\n                    const value = row[column.id];\n\n                    // BLOCK\n                    if (column.id === 'block') {\n                      if (row.betstatus === true) {\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            <Typography variant=\"subtitle1\" style={{ fontWeight: 400 }}>\n                              <Tooltip\n                                title={<h3 style={{ fontWeight: 400 }}>Bet played successfully and jackpot won </h3>}\n                                arrow\n                                placement=\"top\"\n                              >\n                                <CheckCircleIcon\n                                  color=\"success\"\n                                  style={{ verticalAlign: 'middle', marginRight: '0.2rem' }}\n                                />\n                              </Tooltip>\n                              <Link\n                                href={`https://bscscan.com/block/${value}`}\n                                style={{ color: 'white' }}\n                                target=\"_blank\"\n                              >\n                                {value}\n                              </Link>\n                            </Typography>\n                          </TableCell>\n                        );\n                      }\n\n                      if (row.betstatus === false) {\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            <Typography variant=\"subtitle1\" style={{ fontWeight: 400 }}>\n                              <Tooltip\n                                title={<h3 style={{ fontWeight: 400 }}>Bet played successfully without jackpot </h3>}\n                                arrow\n                                placement=\"top\"\n                              >\n                                <ErrorIcon color=\"error\" style={{ verticalAlign: 'middle', marginRight: '0.2rem' }} />\n                              </Tooltip>\n                              <Link\n                                href={`https://bscscan.com/block/${value}`}\n                                style={{ color: 'white' }}\n                                target=\"_blank\"\n                              >\n                                {value}\n                              </Link>\n                            </Typography>\n                          </TableCell>\n                        );\n                      }\n                    }\n\n                    if (column.id === 'hash' && row.type !== 'Lucky 888') {\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          <Typography variant=\"subtitle1\" style={{ fontWeight: 400 }}>\n                            {row.hash.hashData.map((hash, i) => (\n                              <Typography style={{ display: 'inline-block' }} color={hash.match ? 'primary' : ''}>\n                                {hash.symbol}\n                              </Typography>\n                            ))}\n                          </Typography>\n                        </TableCell>\n                      );\n                    }\n\n                    if (column.id === 'hash' && row.type === 'Lucky 888') {\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          -\n                        </TableCell>\n                      );\n                    }\n\n                    if (\n                      column.id === 'bet' &&\n                      row.type !== 'Lucky 888' &&\n                      row.type !== 'Shell Game' &&\n                      row.type !== 'Ape Slots' &&\n                      row.type !== 'Envelopes' &&\n                      row.type !== 'Plinko'\n                    ) {\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          <Typography variant=\"subtitle1\" style={{ fontWeight: 400 }}>\n                            {row.hash.betData.map((hash, i) => (\n                              <Typography style={{ display: 'inline-block' }} color={hash.match ? 'primary' : ''}>\n                                {hash.symbol}\n                              </Typography>\n                            ))}\n                          </Typography>\n                        </TableCell>\n                      );\n                    }\n\n                    if (column.id === 'bet' && row.type === 'Lucky 888') {\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          -\n                        </TableCell>\n                      );\n                    }\n\n                    if (column.id === 'bet' && row.type === 'Shell Game') {\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {shellType(row.shell)}\n                        </TableCell>\n                      );\n                    }\n\n                    if (column.id === 'bet' && row.type === 'Envelopes') {\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {envelopeType(row.envelope)}\n                        </TableCell>\n                      );\n                    }\n\n                    if (column.id === 'bet' && row.type === 'Ape Slots') {\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {row.mode ? 'Degen Mode' : 'Normal Mode'}\n                        </TableCell>\n                      );\n                    }\n\n\n                    if (column.id === 'bet' && row.type === 'Plinko') {\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          Slot {row.slot}\n                        </TableCell>\n                      );\n                    }\n\n                    if (column.id === 'betid') {\n                      /* eslint no-nested-ternary: \"warn\" */\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          <Typography variant=\"subtitle1\" style={{ fontWeight: 400 }}>\n                            <Link\n                              href={\n                                row.type === 'Lucky 888'\n                                  ? `https://bscscan.com/address/${LOTO_ADDRESS_LUCKY888}#readContract`\n                                  : row.type === 'Shell Game'\n                                  ? `https://bscscan.com/address/${LOTO_ADDRESS_SHELLGAME}#readContract`\n                                  : row.type === 'Envelopes'\n                                  ? `https://bscscan.com/address/${LOTO_ADDRESS_ENVELOPES}#readContract`\n                                  : row.type === 'Two Win Game'\n                                  ? `https://bscscan.com/address/${LOTO_ADDRESS_TWOWIN}#readContract`\n                                  : row.type === 'Ape Slots'\n                                  ? `https://bscscan.com/address/${LOTO_ADDRESS_APESLOTS}#readContract`\n                                  : row.type === 'Plinko' && row.token == '0' \n                                  ? `https://bscscan.com/address/${PLINKO_ADDRESS}#readContract`\n                                  : row.type === 'Plinko' && row.token == '1' \n                                  ? `https://bscscan.com/address/${PLINKO_SHAZU_ADDRESS}#readContract`\n                                  : `https://bscscan.com/address/${LOTO_ADDRESS}#readContract`\n                              }\n                              target=\"_blank\"\n                              style={{ color: 'white' }}\n                            >\n                              {value}\n                            </Link>\n                          </Typography>\n                        </TableCell>\n                      );\n                    }\n\n                    if (column.id === 'type') {\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          <Typography variant=\"subtitle1\" style={{ fontWeight: 400 }}>\n                            {value}\n                          </Typography>\n                        </TableCell>\n                      );\n                    }\n\n                    if (column.id === 'betamount' && row.type != 'Plinko') {\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          <Typography variant=\"subtitle1\" style={{ fontWeight: 400 }}>\n                            <Stack direction=\"row\" spacing={1} justifyContent=\"flex-end\" alignItems=\"center\">\n                              <Link\n                                href={`https://bscscan.com/tx/${row.txid}`}\n                                target=\"_blank\"\n                                style={{ color: 'white' }}\n                              >\n                                {fMCurrency(value)} BNB\n                              </Link>\n                              <img alt=\"\" src=\"/static/icons/ic_bnb.svg\" width={20} height={20} />\n                            </Stack>\n                          </Typography>\n                        </TableCell>\n                      );\n                    }\n\n                    if (column.id === 'betamount' && row.type == 'Plinko') {\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          <Typography variant=\"subtitle1\" style={{ fontWeight: 400 }}>\n                            <Stack direction=\"row\" spacing={1} justifyContent=\"flex-end\" alignItems=\"center\">\n                              <Link\n                                href={`https://bscscan.com/tx/${row.txid}`}\n                                target=\"_blank\"\n                                style={{ color: 'white' }}\n                              >\n                                50,000 {row.type !== 'Plinko' ? 'BNB' : row.token == '0' ? 'JUICE' : 'SHAZU'}\n                              </Link>\n                              <img alt=\"\" src={row.type !== 'Plinko' ? \"/static/icons/ic_bnb.svg\" :  row.token == '0' ? \"/static/icons/ic_juice.svg\" : \"/static/icons/ic_shazu.png\"} width={20} height={20} />\n                            </Stack>\n                          </Typography>\n                        </TableCell>\n                      );\n                    }\n\n                    if (column.id === 'winamount') {\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          <Typography variant=\"subtitle1\" style={{ fontWeight: 400 }}>\n                            <Stack direction=\"row\" spacing={1} justifyContent=\"flex-end\" alignItems=\"center\">\n                              <Link\n                                href={`https://bscscan.com/tx/${row.txid}`}\n                                target=\"_blank\"\n                                style={{ color: 'white' }}\n                              >\n                               {fMCurrency(value)} {row.type !== 'Plinko' ? 'BNB' : row.token == '0' ? 'JUICE' : 'SHAZU'}\n                              </Link>\n                              <img alt=\"\" src={row.type !== 'Plinko' ? \"/static/icons/ic_bnb.svg\" :  row.token == '0' ? \"/static/icons/ic_juice.svg\" : \"/static/icons/ic_shazu.png\"} width={20} height={20} />\n                            </Stack>\n                          </Typography>\n                        </TableCell>\n                      );\n                    }\n\n                    return '';\n                  })}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n      <TablePagination\n        page={page}\n        component=\"div\"\n        count={Number(total)}\n        rowsPerPage={rowsPerPage}\n        onPageChange={handleChangePage}\n        rowsPerPageOptions={[10, 25, 50]}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\n\n// material\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Container,\n  Typography,\n  styled,\n  Paper,\n  Grid,\n  Button,\n  Stack,\n  LinearProgress\n} from '@material-ui/core';\nimport { motion } from 'framer-motion';\nimport { useTheme } from '@material-ui/core/styles';\n\n// hooks\nimport useSettings from '../hooks/useSettings';\nimport useWallets from '../hooks/useWallets';\nimport useCountdown from '../hooks/useCountdown';\n\n// components\nimport Page from '../components/Page';\nimport MyBets from '../components/MyBets';\nimport { varFadeIn, varFadeInUp, varWrapEnter, varFadeInRight } from '../components/animate';\n\n\n// ----------------------------------------------------------------------\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  color: theme.palette.text.primary,\n  height: '100%'\n}));\n\nconst CountdownStyle = styled('div')({\n  display: 'flex',\n  justifyContent: 'left'\n});\n\nconst SeparatorStyle = styled(Typography)(({ theme }) => ({\n  margin: theme.spacing(0, 1),\n  [theme.breakpoints.up('sm')]: {\n    margin: theme.spacing(0, 1.5)\n  }\n}));\n\nconst AnimateContainer = styled(motion.div)(({ theme }) => ({}));\n\nexport default function MyBetsPage() {\n  const theme = useTheme();\n  const { themeStretch } = useSettings();\n\n  const { connectedStatus, walletAddress, walletType, JUICEBalance, onChangeConnect } = useWallets();\n\n  return (\n    <Page title=\"Cryptodrop | Stake\" style={{ overflow: 'hidden' }}>\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <AnimateContainer initial=\"initial\" animate=\"animate\" variants={varWrapEnter}>\n          <motion.div variants={varFadeIn}>\n            <img\n              src=\"/static/svg/mybets.svg\"\n              alt=\"\"\n              style={{\n                position: 'absolute',\n                opacity: '0.15',\n                marginTop: '-1.5rem',\n                marginLeft: '-1.5rem',\n                zIndex: '-1'\n              }}\n            />\n          </motion.div>\n          <motion.div variants={varFadeInRight}>\n            <Typography variant=\"h3\" component=\"h1\" paragraph>\n              My Bets\n            </Typography>\n          </motion.div>\n\n          <motion.div variants={varFadeInRight}>\n            <Grid container spacing={2} alignItems=\"stretch\" direction=\"row\" justifyContent=\"flex-start\">\n              <Grid item xs={12} md={12} lg={12} xl={12} style={{ zIndex: '1' }}>\n                <Card>\n                  <CardHeader\n                    title=\"Bet History\"\n                    titleTypographyProps={{ variant: 'h4' }}\n                    style={{ marginBottom: '1rem' }}\n                  />\n                  <MyBets />\n                </Card>\n              </Grid>\n            </Grid>\n          </motion.div>\n\n          <img\n            src=\"/static/background/waves.svg\"\n            alt=\"\"\n            style={{\n              position: 'fixed',\n              bottom: '0',\n              left: '0',\n              zIndex: '-1',\n              opacity: '0.2',\n              width: '100%',\n              minHeight: '20rem',\n              objectFit: 'cover'\n            }}\n          />\n        </AnimateContainer>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}